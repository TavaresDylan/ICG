version: "3.9"

services:
  frontend:
    restart: always
    tty: true
    container_name: vuejs_server
    build: ./frontend
    env_file:
      - .env
    ports:
      - ${VUE_CONTAINER_PORTS}
    volumes: ["./frontend:/app", "./backend:/backend"]
    depends_on:
      - db
    networks:
      - net

  backend:
    tty: true
    restart: always
    container_name: django_server
    build: ./backend/
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --no-input && python manage.py runserver 0.0.0.0:8085"
    ports:
      - ${DJANGO_CONTAINER_PORTS}
    volumes:
      - ./backend:/app
      - ./backend/var/static_root/:/app/static
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - net

  db:
    restart: on-failure
    container_name: database_server
    image: mysql:${MYSQL_VERSION}
    ports:
      - ${MYSQL_CONTAINER_PORTS}
    env_file:
      - .env
    volumes:
      - ./db:/docker-entrypoint-initdb.d/:ro
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - net

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - 31730:8080
    networks:
      - net

  doc:
    tty: true
    container_name: mkdocs-material
    image: squidfunk/mkdocs-material
    ports:
      - ${MKDOCS_CONTAINER_PORTS}
    volumes: 
      - ./docs/:/docs
    entrypoint: ["mkdocs", "serve", "-a", "0.0.0.0:5000"]
    env_file:
      - .env
    networks:
      - net

  redis:
      image: redis:alpine
      container_name: redis
      networks:
        - net

networks:
  net:
    driver: bridge